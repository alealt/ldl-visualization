/*
 * generated by Xtext 2.10.0
 */
grammar InternalLevelDesign;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package at.ac.tuwien.big.leveldesign.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.ac.tuwien.big.leveldesign.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import at.ac.tuwien.big.leveldesign.services.LevelDesignGrammarAccess;

}
@parser::members {
	private LevelDesignGrammarAccess grammarAccess;

	public void setGrammarAccess(LevelDesignGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleLevel
entryRuleLevel
:
{ before(grammarAccess.getLevelRule()); }
	 ruleLevel
{ after(grammarAccess.getLevelRule()); } 
	 EOF 
;

// Rule Level
ruleLevel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLevelAccess().getGroup()); }
		(rule__Level__Group__0)
		{ after(grammarAccess.getLevelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoom
entryRuleRoom
:
{ before(grammarAccess.getRoomRule()); }
	 ruleRoom
{ after(grammarAccess.getRoomRule()); } 
	 EOF 
;

// Rule Room
ruleRoom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoomAccess().getGroup()); }
		(rule__Room__Group__0)
		{ after(grammarAccess.getRoomAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnection
entryRuleConnection
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionAccess().getGroup()); }
		(rule__Connection__Group__0)
		{ after(grammarAccess.getConnectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMonster
entryRuleMonster
:
{ before(grammarAccess.getMonsterRule()); }
	 ruleMonster
{ after(grammarAccess.getMonsterRule()); } 
	 EOF 
;

// Rule Monster
ruleMonster 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMonsterAccess().getGroup()); }
		(rule__Monster__Group__0)
		{ after(grammarAccess.getMonsterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrapdoor
entryRuleTrapdoor
:
{ before(grammarAccess.getTrapdoorRule()); }
	 ruleTrapdoor
{ after(grammarAccess.getTrapdoorRule()); } 
	 EOF 
;

// Rule Trapdoor
ruleTrapdoor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrapdoorAccess().getGroup()); }
		(rule__Trapdoor__Group__0)
		{ after(grammarAccess.getTrapdoorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWall
entryRuleWall
:
{ before(grammarAccess.getWallRule()); }
	 ruleWall
{ after(grammarAccess.getWallRule()); } 
	 EOF 
;

// Rule Wall
ruleWall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWallAccess().getGroup()); }
		(rule__Wall__Group__0)
		{ after(grammarAccess.getWallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntry
entryRuleEntry
:
{ before(grammarAccess.getEntryRule()); }
	 ruleEntry
{ after(grammarAccess.getEntryRule()); } 
	 EOF 
;

// Rule Entry
ruleEntry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntryAccess().getGroup()); }
		(rule__Entry__Group__0)
		{ after(grammarAccess.getEntryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExit
entryRuleExit
:
{ before(grammarAccess.getExitRule()); }
	 ruleExit
{ after(grammarAccess.getExitRule()); } 
	 EOF 
;

// Rule Exit
ruleExit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExitAccess().getGroup()); }
		(rule__Exit__Group__0)
		{ after(grammarAccess.getExitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoordinate
entryRuleCoordinate
:
{ before(grammarAccess.getCoordinateRule()); }
	 ruleCoordinate
{ after(grammarAccess.getCoordinateRule()); } 
	 EOF 
;

// Rule Coordinate
ruleCoordinate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoordinateAccess().getAlternatives()); }
		(rule__Coordinate__Alternatives)
		{ after(grammarAccess.getCoordinateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getGroup_0()); }
		(rule__Coordinate__Group_0__0)
		{ after(grammarAccess.getCoordinateAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCoordinateAccess().getGroup_1()); }
		(rule__Coordinate__Group_1__0)
		{ after(grammarAccess.getCoordinateAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Level__Group__0__Impl
	rule__Level__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLevelAccess().getSpawnKeyword_0()); }
	'spawn'
	{ after(grammarAccess.getLevelAccess().getSpawnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Level__Group__1__Impl
	rule__Level__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLevelAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getLevelAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Level__Group__2__Impl
	rule__Level__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLevelAccess().getSpawnRoomAssignment_2()); }
	(rule__Level__SpawnRoomAssignment_2)
	{ after(grammarAccess.getLevelAccess().getSpawnRoomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Level__Group__3__Impl
	rule__Level__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLevelAccess().getGoalKeyword_3()); }
	'goal'
	{ after(grammarAccess.getLevelAccess().getGoalKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Level__Group__4__Impl
	rule__Level__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLevelAccess().getEqualsSignGreaterThanSignKeyword_4()); }
	'=>'
	{ after(grammarAccess.getLevelAccess().getEqualsSignGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Level__Group__5__Impl
	rule__Level__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLevelAccess().getGoalRoomAssignment_5()); }
	(rule__Level__GoalRoomAssignment_5)
	{ after(grammarAccess.getLevelAccess().getGoalRoomAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Level__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getLevelAccess().getRoomsAssignment_6()); }
		(rule__Level__RoomsAssignment_6)
		{ after(grammarAccess.getLevelAccess().getRoomsAssignment_6()); }
	)
	(
		{ before(grammarAccess.getLevelAccess().getRoomsAssignment_6()); }
		(rule__Level__RoomsAssignment_6)*
		{ after(grammarAccess.getLevelAccess().getRoomsAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Room__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__0__Impl
	rule__Room__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRoomKeyword_0()); }
	'room'
	{ after(grammarAccess.getRoomAccess().getRoomKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__1__Impl
	rule__Room__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getNameAssignment_1()); }
	(rule__Room__NameAssignment_1)
	{ after(grammarAccess.getRoomAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__2__Impl
	rule__Room__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRoomAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__3__Impl
	rule__Room__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getColumnsKeyword_3()); }
	'columns'
	{ after(grammarAccess.getRoomAccess().getColumnsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__4__Impl
	rule__Room__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getEqualsSignKeyword_4()); }
	('=')?
	{ after(grammarAccess.getRoomAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__5__Impl
	rule__Room__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getColumnsAssignment_5()); }
	(rule__Room__ColumnsAssignment_5)
	{ after(grammarAccess.getRoomAccess().getColumnsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__6__Impl
	rule__Room__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRowsKeyword_6()); }
	'rows'
	{ after(grammarAccess.getRoomAccess().getRowsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__7__Impl
	rule__Room__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getEqualsSignKeyword_7()); }
	('=')?
	{ after(grammarAccess.getRoomAccess().getEqualsSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__8__Impl
	rule__Room__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRowsAssignment_8()); }
	(rule__Room__RowsAssignment_8)
	{ after(grammarAccess.getRoomAccess().getRowsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__9__Impl
	rule__Room__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getEntryAssignment_9()); }
	(rule__Room__EntryAssignment_9)
	{ after(grammarAccess.getRoomAccess().getEntryAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__10__Impl
	rule__Room__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getExitAssignment_10()); }
	(rule__Room__ExitAssignment_10)
	{ after(grammarAccess.getRoomAccess().getExitAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__11__Impl
	rule__Room__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getExitConnectionAssignment_11()); }
	(rule__Room__ExitConnectionAssignment_11)?
	{ after(grammarAccess.getRoomAccess().getExitConnectionAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__12__Impl
	rule__Room__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getWallsAssignment_12()); }
	(rule__Room__WallsAssignment_12)*
	{ after(grammarAccess.getRoomAccess().getWallsAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__13__Impl
	rule__Room__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getTrapdoorsAssignment_13()); }
	(rule__Room__TrapdoorsAssignment_13)*
	{ after(grammarAccess.getRoomAccess().getTrapdoorsAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__14__Impl
	rule__Room__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getMonstersAssignment_14()); }
	(rule__Room__MonstersAssignment_14)*
	{ after(grammarAccess.getRoomAccess().getMonstersAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRightCurlyBracketKeyword_15()); }
	'}'
	{ after(grammarAccess.getRoomAccess().getRightCurlyBracketKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__0__Impl
	rule__Connection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getTypeAssignment_0()); }
	(rule__Connection__TypeAssignment_0)
	{ after(grammarAccess.getConnectionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__1__Impl
	rule__Connection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getConnectionAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getNextRoomAssignment_2()); }
	(rule__Connection__NextRoomAssignment_2)
	{ after(grammarAccess.getConnectionAccess().getNextRoomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Monster__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__0__Impl
	rule__Monster__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getMonsterKeyword_0()); }
	'monster'
	{ after(grammarAccess.getMonsterAccess().getMonsterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__1__Impl
	rule__Monster__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getNameAssignment_1()); }
	(rule__Monster__NameAssignment_1)?
	{ after(grammarAccess.getMonsterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__2__Impl
	rule__Monster__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getCommercialAtKeyword_2()); }
	('@')?
	{ after(grammarAccess.getMonsterAccess().getCommercialAtKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__3__Impl
	rule__Monster__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getPositionAssignment_3()); }
	(rule__Monster__PositionAssignment_3)
	{ after(grammarAccess.getMonsterAccess().getPositionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__4__Impl
	rule__Monster__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getMonsterAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__5__Impl
	rule__Monster__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getHpKeyword_5()); }
	'hp'
	{ after(grammarAccess.getMonsterAccess().getHpKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__6__Impl
	rule__Monster__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getEqualsSignKeyword_6()); }
	('=')?
	{ after(grammarAccess.getMonsterAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__7__Impl
	rule__Monster__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getHpAssignment_7()); }
	(rule__Monster__HpAssignment_7)
	{ after(grammarAccess.getMonsterAccess().getHpAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__8__Impl
	rule__Monster__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getDamageKeyword_8()); }
	'damage'
	{ after(grammarAccess.getMonsterAccess().getDamageKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__9__Impl
	rule__Monster__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getEqualsSignKeyword_9()); }
	('=')?
	{ after(grammarAccess.getMonsterAccess().getEqualsSignKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__10__Impl
	rule__Monster__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getDamageAssignment_10()); }
	(rule__Monster__DamageAssignment_10)
	{ after(grammarAccess.getMonsterAccess().getDamageAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__11__Impl
	rule__Monster__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getSpeedKeyword_11()); }
	'speed'
	{ after(grammarAccess.getMonsterAccess().getSpeedKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__12__Impl
	rule__Monster__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getEqualsSignKeyword_12()); }
	('=')?
	{ after(grammarAccess.getMonsterAccess().getEqualsSignKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__13__Impl
	rule__Monster__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getSpeedAssignment_13()); }
	(rule__Monster__SpeedAssignment_13)
	{ after(grammarAccess.getMonsterAccess().getSpeedAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__14__Impl
	rule__Monster__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getRangeKeyword_14()); }
	'range'
	{ after(grammarAccess.getMonsterAccess().getRangeKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__15__Impl
	rule__Monster__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getEqualsSignKeyword_15()); }
	('=')?
	{ after(grammarAccess.getMonsterAccess().getEqualsSignKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__16__Impl
	rule__Monster__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getRangeAssignment_16()); }
	(rule__Monster__RangeAssignment_16)
	{ after(grammarAccess.getMonsterAccess().getRangeAssignment_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__17__Impl
	rule__Monster__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getAggroradiusKeyword_17()); }
	'aggroradius'
	{ after(grammarAccess.getMonsterAccess().getAggroradiusKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__18__Impl
	rule__Monster__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getEqualsSignKeyword_18()); }
	('=')?
	{ after(grammarAccess.getMonsterAccess().getEqualsSignKeyword_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__19__Impl
	rule__Monster__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getAggroRadiusAssignment_19()); }
	(rule__Monster__AggroRadiusAssignment_19)
	{ after(grammarAccess.getMonsterAccess().getAggroRadiusAssignment_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__20
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Monster__Group__20__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__Group__20__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonsterAccess().getRightCurlyBracketKeyword_20()); }
	'}'
	{ after(grammarAccess.getMonsterAccess().getRightCurlyBracketKeyword_20()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trapdoor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trapdoor__Group__0__Impl
	rule__Trapdoor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trapdoor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrapdoorAccess().getTrapdoorKeyword_0()); }
	'trapdoor'
	{ after(grammarAccess.getTrapdoorAccess().getTrapdoorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trapdoor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trapdoor__Group__1__Impl
	rule__Trapdoor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trapdoor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrapdoorAccess().getNameAssignment_1()); }
	(rule__Trapdoor__NameAssignment_1)?
	{ after(grammarAccess.getTrapdoorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trapdoor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trapdoor__Group__2__Impl
	rule__Trapdoor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trapdoor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrapdoorAccess().getCommercialAtKeyword_2()); }
	('@')?
	{ after(grammarAccess.getTrapdoorAccess().getCommercialAtKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trapdoor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trapdoor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trapdoor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrapdoorAccess().getPositionAssignment_3()); }
	(rule__Trapdoor__PositionAssignment_3)
	{ after(grammarAccess.getTrapdoorAccess().getPositionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Wall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wall__Group__0__Impl
	rule__Wall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallAccess().getWallKeyword_0()); }
	'wall'
	{ after(grammarAccess.getWallAccess().getWallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wall__Group__1__Impl
	rule__Wall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallAccess().getNameAssignment_1()); }
	(rule__Wall__NameAssignment_1)
	{ after(grammarAccess.getWallAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wall__Group__2__Impl
	rule__Wall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getWallAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wall__Group__3__Impl
	rule__Wall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallAccess().getFromAssignment_3()); }
	(rule__Wall__FromAssignment_3)
	{ after(grammarAccess.getWallAccess().getFromAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wall__Group__4__Impl
	rule__Wall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallAccess().getToKeyword_4()); }
	'to'
	{ after(grammarAccess.getWallAccess().getToKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWallAccess().getToAssignment_5()); }
	(rule__Wall__ToAssignment_5)
	{ after(grammarAccess.getWallAccess().getToAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entry__Group__0__Impl
	rule__Entry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryAccess().getEntryKeyword_0()); }
	'entry'
	{ after(grammarAccess.getEntryAccess().getEntryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entry__Group__1__Impl
	rule__Entry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryAccess().getNameAssignment_1()); }
	(rule__Entry__NameAssignment_1)
	{ after(grammarAccess.getEntryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entry__Group__2__Impl
	rule__Entry__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryAccess().getCommercialAtKeyword_2()); }
	('@')?
	{ after(grammarAccess.getEntryAccess().getCommercialAtKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entry__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryAccess().getPositionAssignment_3()); }
	(rule__Entry__PositionAssignment_3)
	{ after(grammarAccess.getEntryAccess().getPositionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exit__Group__0__Impl
	rule__Exit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitAccess().getExitKeyword_0()); }
	'exit'
	{ after(grammarAccess.getExitAccess().getExitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exit__Group__1__Impl
	rule__Exit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitAccess().getNameAssignment_1()); }
	(rule__Exit__NameAssignment_1)
	{ after(grammarAccess.getExitAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exit__Group__2__Impl
	rule__Exit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitAccess().getCommercialAtKeyword_2()); }
	('@')?
	{ after(grammarAccess.getExitAccess().getCommercialAtKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitAccess().getPositionAssignment_3()); }
	(rule__Exit__PositionAssignment_3)
	{ after(grammarAccess.getExitAccess().getPositionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Coordinate__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group_0__0__Impl
	rule__Coordinate__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getCoordinateAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group_0__1__Impl
	rule__Coordinate__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getColumnAssignment_0_1()); }
	(rule__Coordinate__ColumnAssignment_0_1)
	{ after(grammarAccess.getCoordinateAccess().getColumnAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group_0__2__Impl
	rule__Coordinate__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getCommaKeyword_0_2()); }
	','
	{ after(grammarAccess.getCoordinateAccess().getCommaKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group_0__3__Impl
	rule__Coordinate__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getRowAssignment_0_3()); }
	(rule__Coordinate__RowAssignment_0_3)
	{ after(grammarAccess.getCoordinateAccess().getRowAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getCoordinateAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Coordinate__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group_1__0__Impl
	rule__Coordinate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getColumnAssignment_1_0()); }
	(rule__Coordinate__ColumnAssignment_1_0)
	{ after(grammarAccess.getCoordinateAccess().getColumnAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group_1__1__Impl
	rule__Coordinate__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getCommaKeyword_1_1()); }
	','
	{ after(grammarAccess.getCoordinateAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getRowAssignment_1_2()); }
	(rule__Coordinate__RowAssignment_1_2)
	{ after(grammarAccess.getCoordinateAccess().getRowAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Level__SpawnRoomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLevelAccess().getSpawnRoomRoomCrossReference_2_0()); }
		(
			{ before(grammarAccess.getLevelAccess().getSpawnRoomRoomIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLevelAccess().getSpawnRoomRoomIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getLevelAccess().getSpawnRoomRoomCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__GoalRoomAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLevelAccess().getGoalRoomRoomCrossReference_5_0()); }
		(
			{ before(grammarAccess.getLevelAccess().getGoalRoomRoomIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLevelAccess().getGoalRoomRoomIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getLevelAccess().getGoalRoomRoomCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Level__RoomsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLevelAccess().getRoomsRoomParserRuleCall_6_0()); }
		ruleRoom
		{ after(grammarAccess.getLevelAccess().getRoomsRoomParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRoomAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__ColumnsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getColumnsINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getRoomAccess().getColumnsINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__RowsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getRowsINTTerminalRuleCall_8_0()); }
		RULE_INT
		{ after(grammarAccess.getRoomAccess().getRowsINTTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__EntryAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getEntryEntryParserRuleCall_9_0()); }
		ruleEntry
		{ after(grammarAccess.getRoomAccess().getEntryEntryParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__ExitAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getExitExitParserRuleCall_10_0()); }
		ruleExit
		{ after(grammarAccess.getRoomAccess().getExitExitParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__ExitConnectionAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getExitConnectionConnectionParserRuleCall_11_0()); }
		ruleConnection
		{ after(grammarAccess.getRoomAccess().getExitConnectionConnectionParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__WallsAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getWallsWallParserRuleCall_12_0()); }
		ruleWall
		{ after(grammarAccess.getRoomAccess().getWallsWallParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__TrapdoorsAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getTrapdoorsTrapdoorParserRuleCall_13_0()); }
		ruleTrapdoor
		{ after(grammarAccess.getRoomAccess().getTrapdoorsTrapdoorParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__MonstersAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getMonstersMonsterParserRuleCall_14_0()); }
		ruleMonster
		{ after(grammarAccess.getRoomAccess().getMonstersMonsterParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getTypeSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getConnectionAccess().getTypeSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__NextRoomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getNextRoomRoomCrossReference_2_0()); }
		(
			{ before(grammarAccess.getConnectionAccess().getNextRoomRoomIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConnectionAccess().getNextRoomRoomIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getConnectionAccess().getNextRoomRoomCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonsterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMonsterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__PositionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonsterAccess().getPositionCoordinateParserRuleCall_3_0()); }
		ruleCoordinate
		{ after(grammarAccess.getMonsterAccess().getPositionCoordinateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__HpAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonsterAccess().getHpINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getMonsterAccess().getHpINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__DamageAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonsterAccess().getDamageINTTerminalRuleCall_10_0()); }
		RULE_INT
		{ after(grammarAccess.getMonsterAccess().getDamageINTTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__SpeedAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonsterAccess().getSpeedDOUBLETerminalRuleCall_13_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getMonsterAccess().getSpeedDOUBLETerminalRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__RangeAssignment_16
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonsterAccess().getRangeINTTerminalRuleCall_16_0()); }
		RULE_INT
		{ after(grammarAccess.getMonsterAccess().getRangeINTTerminalRuleCall_16_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Monster__AggroRadiusAssignment_19
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonsterAccess().getAggroRadiusINTTerminalRuleCall_19_0()); }
		RULE_INT
		{ after(grammarAccess.getMonsterAccess().getAggroRadiusINTTerminalRuleCall_19_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trapdoor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrapdoorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTrapdoorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trapdoor__PositionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrapdoorAccess().getPositionCoordinateParserRuleCall_3_0()); }
		ruleCoordinate
		{ after(grammarAccess.getTrapdoorAccess().getPositionCoordinateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWallAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWallAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__FromAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWallAccess().getFromCoordinateParserRuleCall_3_0()); }
		ruleCoordinate
		{ after(grammarAccess.getWallAccess().getFromCoordinateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wall__ToAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWallAccess().getToCoordinateParserRuleCall_5_0()); }
		ruleCoordinate
		{ after(grammarAccess.getWallAccess().getToCoordinateParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntryAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entry__PositionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryAccess().getPositionCoordinateParserRuleCall_3_0()); }
		ruleCoordinate
		{ after(grammarAccess.getEntryAccess().getPositionCoordinateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExitAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExitAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__PositionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExitAccess().getPositionCoordinateParserRuleCall_3_0()); }
		ruleCoordinate
		{ after(grammarAccess.getExitAccess().getPositionCoordinateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__ColumnAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getColumnINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getCoordinateAccess().getColumnINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__RowAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getRowINTTerminalRuleCall_0_3_0()); }
		RULE_INT
		{ after(grammarAccess.getCoordinateAccess().getRowINTTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__ColumnAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getColumnINTTerminalRuleCall_1_0_0()); }
		RULE_INT
		{ after(grammarAccess.getCoordinateAccess().getColumnINTTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__RowAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getRowINTTerminalRuleCall_1_2_0()); }
		RULE_INT
		{ after(grammarAccess.getCoordinateAccess().getRowINTTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
