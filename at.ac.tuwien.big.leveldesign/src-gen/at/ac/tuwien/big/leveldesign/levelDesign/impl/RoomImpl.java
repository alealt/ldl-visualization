/**
 * generated by Xtext 2.10.0
 */
package at.ac.tuwien.big.leveldesign.levelDesign.impl;

import at.ac.tuwien.big.leveldesign.levelDesign.Connection;
import at.ac.tuwien.big.leveldesign.levelDesign.Entry;
import at.ac.tuwien.big.leveldesign.levelDesign.Exit;
import at.ac.tuwien.big.leveldesign.levelDesign.LevelDesignPackage;
import at.ac.tuwien.big.leveldesign.levelDesign.Monster;
import at.ac.tuwien.big.leveldesign.levelDesign.Room;
import at.ac.tuwien.big.leveldesign.levelDesign.Trapdoor;
import at.ac.tuwien.big.leveldesign.levelDesign.Wall;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Room</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link at.ac.tuwien.big.leveldesign.levelDesign.impl.RoomImpl#getName <em>Name</em>}</li>
 *   <li>{@link at.ac.tuwien.big.leveldesign.levelDesign.impl.RoomImpl#getColumns <em>Columns</em>}</li>
 *   <li>{@link at.ac.tuwien.big.leveldesign.levelDesign.impl.RoomImpl#getRows <em>Rows</em>}</li>
 *   <li>{@link at.ac.tuwien.big.leveldesign.levelDesign.impl.RoomImpl#getEntry <em>Entry</em>}</li>
 *   <li>{@link at.ac.tuwien.big.leveldesign.levelDesign.impl.RoomImpl#getExit <em>Exit</em>}</li>
 *   <li>{@link at.ac.tuwien.big.leveldesign.levelDesign.impl.RoomImpl#getExitConnection <em>Exit Connection</em>}</li>
 *   <li>{@link at.ac.tuwien.big.leveldesign.levelDesign.impl.RoomImpl#getWalls <em>Walls</em>}</li>
 *   <li>{@link at.ac.tuwien.big.leveldesign.levelDesign.impl.RoomImpl#getTrapdoors <em>Trapdoors</em>}</li>
 *   <li>{@link at.ac.tuwien.big.leveldesign.levelDesign.impl.RoomImpl#getMonsters <em>Monsters</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RoomImpl extends MinimalEObjectImpl.Container implements Room
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getColumns() <em>Columns</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColumns()
   * @generated
   * @ordered
   */
  protected static final int COLUMNS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getColumns() <em>Columns</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColumns()
   * @generated
   * @ordered
   */
  protected int columns = COLUMNS_EDEFAULT;

  /**
   * The default value of the '{@link #getRows() <em>Rows</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRows()
   * @generated
   * @ordered
   */
  protected static final int ROWS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRows() <em>Rows</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRows()
   * @generated
   * @ordered
   */
  protected int rows = ROWS_EDEFAULT;

  /**
   * The cached value of the '{@link #getEntry() <em>Entry</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntry()
   * @generated
   * @ordered
   */
  protected Entry entry;

  /**
   * The cached value of the '{@link #getExit() <em>Exit</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExit()
   * @generated
   * @ordered
   */
  protected Exit exit;

  /**
   * The cached value of the '{@link #getExitConnection() <em>Exit Connection</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExitConnection()
   * @generated
   * @ordered
   */
  protected Connection exitConnection;

  /**
   * The cached value of the '{@link #getWalls() <em>Walls</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWalls()
   * @generated
   * @ordered
   */
  protected EList<Wall> walls;

  /**
   * The cached value of the '{@link #getTrapdoors() <em>Trapdoors</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrapdoors()
   * @generated
   * @ordered
   */
  protected EList<Trapdoor> trapdoors;

  /**
   * The cached value of the '{@link #getMonsters() <em>Monsters</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMonsters()
   * @generated
   * @ordered
   */
  protected EList<Monster> monsters;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RoomImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LevelDesignPackage.Literals.ROOM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LevelDesignPackage.ROOM__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getColumns()
  {
    return columns;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setColumns(int newColumns)
  {
    int oldColumns = columns;
    columns = newColumns;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LevelDesignPackage.ROOM__COLUMNS, oldColumns, columns));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getRows()
  {
    return rows;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRows(int newRows)
  {
    int oldRows = rows;
    rows = newRows;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LevelDesignPackage.ROOM__ROWS, oldRows, rows));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entry getEntry()
  {
    return entry;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEntry(Entry newEntry, NotificationChain msgs)
  {
    Entry oldEntry = entry;
    entry = newEntry;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LevelDesignPackage.ROOM__ENTRY, oldEntry, newEntry);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEntry(Entry newEntry)
  {
    if (newEntry != entry)
    {
      NotificationChain msgs = null;
      if (entry != null)
        msgs = ((InternalEObject)entry).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LevelDesignPackage.ROOM__ENTRY, null, msgs);
      if (newEntry != null)
        msgs = ((InternalEObject)newEntry).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LevelDesignPackage.ROOM__ENTRY, null, msgs);
      msgs = basicSetEntry(newEntry, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LevelDesignPackage.ROOM__ENTRY, newEntry, newEntry));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Exit getExit()
  {
    return exit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExit(Exit newExit, NotificationChain msgs)
  {
    Exit oldExit = exit;
    exit = newExit;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LevelDesignPackage.ROOM__EXIT, oldExit, newExit);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExit(Exit newExit)
  {
    if (newExit != exit)
    {
      NotificationChain msgs = null;
      if (exit != null)
        msgs = ((InternalEObject)exit).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LevelDesignPackage.ROOM__EXIT, null, msgs);
      if (newExit != null)
        msgs = ((InternalEObject)newExit).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LevelDesignPackage.ROOM__EXIT, null, msgs);
      msgs = basicSetExit(newExit, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LevelDesignPackage.ROOM__EXIT, newExit, newExit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Connection getExitConnection()
  {
    return exitConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExitConnection(Connection newExitConnection, NotificationChain msgs)
  {
    Connection oldExitConnection = exitConnection;
    exitConnection = newExitConnection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LevelDesignPackage.ROOM__EXIT_CONNECTION, oldExitConnection, newExitConnection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExitConnection(Connection newExitConnection)
  {
    if (newExitConnection != exitConnection)
    {
      NotificationChain msgs = null;
      if (exitConnection != null)
        msgs = ((InternalEObject)exitConnection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LevelDesignPackage.ROOM__EXIT_CONNECTION, null, msgs);
      if (newExitConnection != null)
        msgs = ((InternalEObject)newExitConnection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LevelDesignPackage.ROOM__EXIT_CONNECTION, null, msgs);
      msgs = basicSetExitConnection(newExitConnection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LevelDesignPackage.ROOM__EXIT_CONNECTION, newExitConnection, newExitConnection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Wall> getWalls()
  {
    if (walls == null)
    {
      walls = new EObjectContainmentEList<Wall>(Wall.class, this, LevelDesignPackage.ROOM__WALLS);
    }
    return walls;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Trapdoor> getTrapdoors()
  {
    if (trapdoors == null)
    {
      trapdoors = new EObjectContainmentEList<Trapdoor>(Trapdoor.class, this, LevelDesignPackage.ROOM__TRAPDOORS);
    }
    return trapdoors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Monster> getMonsters()
  {
    if (monsters == null)
    {
      monsters = new EObjectContainmentEList<Monster>(Monster.class, this, LevelDesignPackage.ROOM__MONSTERS);
    }
    return monsters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LevelDesignPackage.ROOM__ENTRY:
        return basicSetEntry(null, msgs);
      case LevelDesignPackage.ROOM__EXIT:
        return basicSetExit(null, msgs);
      case LevelDesignPackage.ROOM__EXIT_CONNECTION:
        return basicSetExitConnection(null, msgs);
      case LevelDesignPackage.ROOM__WALLS:
        return ((InternalEList<?>)getWalls()).basicRemove(otherEnd, msgs);
      case LevelDesignPackage.ROOM__TRAPDOORS:
        return ((InternalEList<?>)getTrapdoors()).basicRemove(otherEnd, msgs);
      case LevelDesignPackage.ROOM__MONSTERS:
        return ((InternalEList<?>)getMonsters()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LevelDesignPackage.ROOM__NAME:
        return getName();
      case LevelDesignPackage.ROOM__COLUMNS:
        return getColumns();
      case LevelDesignPackage.ROOM__ROWS:
        return getRows();
      case LevelDesignPackage.ROOM__ENTRY:
        return getEntry();
      case LevelDesignPackage.ROOM__EXIT:
        return getExit();
      case LevelDesignPackage.ROOM__EXIT_CONNECTION:
        return getExitConnection();
      case LevelDesignPackage.ROOM__WALLS:
        return getWalls();
      case LevelDesignPackage.ROOM__TRAPDOORS:
        return getTrapdoors();
      case LevelDesignPackage.ROOM__MONSTERS:
        return getMonsters();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LevelDesignPackage.ROOM__NAME:
        setName((String)newValue);
        return;
      case LevelDesignPackage.ROOM__COLUMNS:
        setColumns((Integer)newValue);
        return;
      case LevelDesignPackage.ROOM__ROWS:
        setRows((Integer)newValue);
        return;
      case LevelDesignPackage.ROOM__ENTRY:
        setEntry((Entry)newValue);
        return;
      case LevelDesignPackage.ROOM__EXIT:
        setExit((Exit)newValue);
        return;
      case LevelDesignPackage.ROOM__EXIT_CONNECTION:
        setExitConnection((Connection)newValue);
        return;
      case LevelDesignPackage.ROOM__WALLS:
        getWalls().clear();
        getWalls().addAll((Collection<? extends Wall>)newValue);
        return;
      case LevelDesignPackage.ROOM__TRAPDOORS:
        getTrapdoors().clear();
        getTrapdoors().addAll((Collection<? extends Trapdoor>)newValue);
        return;
      case LevelDesignPackage.ROOM__MONSTERS:
        getMonsters().clear();
        getMonsters().addAll((Collection<? extends Monster>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LevelDesignPackage.ROOM__NAME:
        setName(NAME_EDEFAULT);
        return;
      case LevelDesignPackage.ROOM__COLUMNS:
        setColumns(COLUMNS_EDEFAULT);
        return;
      case LevelDesignPackage.ROOM__ROWS:
        setRows(ROWS_EDEFAULT);
        return;
      case LevelDesignPackage.ROOM__ENTRY:
        setEntry((Entry)null);
        return;
      case LevelDesignPackage.ROOM__EXIT:
        setExit((Exit)null);
        return;
      case LevelDesignPackage.ROOM__EXIT_CONNECTION:
        setExitConnection((Connection)null);
        return;
      case LevelDesignPackage.ROOM__WALLS:
        getWalls().clear();
        return;
      case LevelDesignPackage.ROOM__TRAPDOORS:
        getTrapdoors().clear();
        return;
      case LevelDesignPackage.ROOM__MONSTERS:
        getMonsters().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LevelDesignPackage.ROOM__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case LevelDesignPackage.ROOM__COLUMNS:
        return columns != COLUMNS_EDEFAULT;
      case LevelDesignPackage.ROOM__ROWS:
        return rows != ROWS_EDEFAULT;
      case LevelDesignPackage.ROOM__ENTRY:
        return entry != null;
      case LevelDesignPackage.ROOM__EXIT:
        return exit != null;
      case LevelDesignPackage.ROOM__EXIT_CONNECTION:
        return exitConnection != null;
      case LevelDesignPackage.ROOM__WALLS:
        return walls != null && !walls.isEmpty();
      case LevelDesignPackage.ROOM__TRAPDOORS:
        return trapdoors != null && !trapdoors.isEmpty();
      case LevelDesignPackage.ROOM__MONSTERS:
        return monsters != null && !monsters.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", columns: ");
    result.append(columns);
    result.append(", rows: ");
    result.append(rows);
    result.append(')');
    return result.toString();
  }

} //RoomImpl
